hello everyone this is the first video
of my series of videos on Azure
container apps it is a serverless
platform for building container-based
microservices
when you hear that definition there can
be a lot of other services that comes
into your mind like kubernetes and Azure
service fabric so is there a difference
between Azure container apps and these
existing contain orchestrators
there's a big difference because usually
configuring and running your
applications on these typical contain
orchestrators is a really complex
process I consider you a genius if you
can run a kubernetes application without
going through the docs because you have
to remember a lot of these apis a lot of
complex stuff as well because kubernetes
is there for building these data centers
level applications and we don't need
that complexity to build applications
this service is built on kubernetes
Azure container app that is built on
kubernetes and based on many other open
source Technologies like tapa as well
for building microservices with this
service you can easily build kubernetes
style apps and micro services with
features like service Discovery and
traffic splitting and Azure content apps
doesn't provide direct access to these
underlying kubernetes apis
and it's not a bad thing because we
don't need that level of access even
though Azure container apps hide that
access it gives you the power of best
practices it already implements some of
the best practices for building
microservice applications
and the best thing about this service is
that it is a fully serverless service I
love serverless Services because you
don't have to pay anything at all if
you're not using the service just like
Azure functions
and in addition to all that there are a
lot of other services supported by
content wraps like kubernetes even
driven Auto scaling and running
microservices built with Dapper built on
top of dapper and HTTP investors like
just like in kubernetes and the support
for public and private content
Registries and there are a lot of other
patterns implemented already as well
like container revisions and traffic
splitting between these revisions and
when you want your microservices talk to
each other you can have service
Discovery in addition to those micro
Services your application can talk to
other Azure Services deployed in a
virtual Network like virtual machines
because we have v-net integration as
well
and we have secrets for storing your
confidential data like connection
strings just like in kubernetes or any
other content orchestrator and we have a
tight integration with log analytics for
observability
so what are the kind of apps that we can
build with Azure container apps you can
build I mean any kind of application you
want but they highlight these four types
to show you the power that it has you
can build public HTTP applications and
you can have revisions and you can have
these blue green deployments like 80 of
your traffic goes into the older version
and 20 of your traffic will go to the
newer version to test your applications
and we can have background processing
applications like let's say you're
building an application like Netflix you
have to charge your users you have to
deduct from your users credit cards at
the end of the month background
processing does that and we can have
even driven asynchronous processes
running and we can build micro services
and if you look here I've got this image
from match documentation by the way for
scaling HTTP based workloads they have
concurrent HTTP request count based
scaling mechanism and for scaling
background processing Services they have
this CPU you add memory based scaling
and we have event paste and the number
of messages in the queue paste scaling
as well
now if you look at the high level
organization of a container app we have
the container apps environment and
inside of that container apps
environment we have the container apps
just like in Azure app Services we have
app service plans and inside of that
upsource plan we have app Services the
same concept applies here as well
because after creating the environment
there will be one resource for
environment and when you create
applications there will be other
resources inside of that Resource Group
and you can think of each of these
container apps as a microservice because
you can scale each of these micro
Services independently you can deploy
independently and these micro Services
these dented wraps they can talk to each
other container apps provides the
platform for doing that as well
now if you look at the pricing this is
similar to Azure functions basically
you're paying only for what you use and
you're getting some free usage time as
well for each month as you can see
you're getting some free vcpu cycles and
free memory and 2 million requests each
month for free
and after going through that free quota
that they offer you have to pay 0.4
dollars per million requests
now there's some limitations as well
that you should be aware of you can't
have containers that require root access
if the container does that it'll be
terminated and currently this supports
Linux based candidates only and it's not
a bad thing I mean I don't think we use
Windows based applications for building
our microservice based applications
because even.net they support Linux
containers
now that we understand what Azure
continuous saw let's build our first
application and deploy with Azure
container apps let's get started alright
now I'm in my Azure portal as you can
see I have created a resource Group
already now I'm going to click on create
to create our container apps service now
if you search for container apps there
will be this option here and it is still
in preview let me click create the
resource Group has already been selected
and here we can provide the name for the
application and in this series of videos
we are building a simple microservices
application on container apps and it is
going to be a simple to-do application
so I'm going to call this one to do
front end this is the name of my
container application and this is not a
globally unique name that you usually
provide in other Azure services like app
Services because after creating this
application there will be a separate URL
a generated URL attached to this service
now the next thing is just like creating
a job service we need to create a
container apps environment as well now I
don't have any container apps
environments created now let me click on
create new we can specify the region now
if you look here we only have six
regions here because the service is
still in preview now let me provide a
name here as well I'm going to call this
to do app EnV and in addition to the
name and the region we have two other
tabs as well now if I go into monitoring
tab we can specify a log analytics
workspace for observability because when
you're building micro Services
applications it is really important that
we have observability because we have a
lot of services running we need to have
logs and that is why we have integrated
log analytics here now if I click on
create new we can provide a name as well
let me call this one to do blogs all
right and the location it is going to be
is 2s region if we go into networking
tab we have the option to integrate with
an existing our own virtual Network that
we manage if you're going with this
option as they say here this will allow
your application to interact to work
with other Azure resources that you have
in this virtual Network or you can even
have your on-premises users access these
app service environment through this
virtual Network when you enable this
setting here there will be a new
Resource Group there will be an
additional Resource Group created and
that will have load balancers and a lot
of other we need resources and this
option is going to cost you a little
more as well because you have the
ability to manage those Services I'm
going to touch this one in one of my
upcoming videos but in this video we're
not going to touch this feature so I'm
going to go with no
let me create this service all right as
you can see we have the new to do app
environment and to do front end assault
container app name I'm going to click
next as you can see here we can use a
quick start image and this is a good
thing we will know whether this
environment works or not right after
building it I'm going to go with this
option here I don't have any tags to add
all right now we have all this
information here about this application
that we're going to create we are
hosting it in the subscription in this
Resource Group and we have some
information about the interrupts
environment it is in east west region
and the app's environment name is this
we have log analytics workspace
integrated and we have default virtual
Network Microsoft managed virtual
Network basically and we have image
source it's a quick start image from
Microsoft and this one is important I'm
going to touch this in one of my
upcoming videos number of CPU cores as
you can see this is kind of a weird way
of providing CPU cost I'm going to touch
this in one my next videos and we have
ingresses and Port 80 open as well for
us to access the application all right
now let me create the service now as you
can see the deployment is complete now
I'm going to go into that resource let's
start with the resource Group I'm going
back into the resource Group we have
three resources in each device region in
this Resource Group we have Azure
container apps environment and a
container app inside of this content
wraps environment and we have a look
analytics workspace as well now if I go
into the Container apps environment
nothing much is here to see we have one
container app and we have one tab here
these are all typical Azure features
that are not specifically related to
Canton wraps now if I go into Apps
section now we have our first container
deployed inside of this service now if I
go into that container app these are all
typical Azure information and we have
the application URL and this one is a
little important the format of it and we
have the environment and the log
analytics works by as well now if I
click on this link here as you can see
this is our first application running in
Azure candidate wraps now if you look at
the URL format here we have Azure
container apps.io and we have the region
here and we have the unique identifier
for the environment and we have the name
of our container app now I'm going back
now if you look here there are a lot of
things that we can study in this series
now that we have deployed this Hello
World start container it's a little
boring right let's try to deploy our own
application to container apps now I've
just opened visual studio and let me
click on a new project and then asp.net
core MVC web app I'm going to click next
and then let me change the location and
I'm going to call this to do app the
solution name and the project name is
going to be to do app.f front end
because there will be other projects
that will be created in this solution
later now click next and then I'm going
to go with dotnet6 I'm going to create
the project now all right app is in
place now we have the controllers and
Views now if you go into the index page
the first application we have the
welcome page here I'm going to change
this so that it looks like a to-do
application a little bit now I have
added this code here all right now I'm
going into the home controller I'm going
to add this to do class and then I'm
going to return this hard-coded list of
to-do's to the UI all right now we have
our application in place let me change
this to 2 all right the next thing that
I'm going to do is I'm going to add
Docker support to this project let me
click on Docker support now or write the
target OS it's going to be Linux as you
can see we have a Docker file inside of
my project now and it's asking me
whether I want to start my Docker
desktop I want to go with yes as you can
see here my Docker desktop environment
is starting now all right I'm going into
the application and then I'm going to
publish it I'm going to publish this
application into Docker Hub the public
Docker registry you can go with Azure
container register as well I'm going to
go with this option here and then I'm
going to go with Docker Hub we have to
authenticate ourselves to Docker Hub now
let me enter my credentials here now
right now I'm going to click on publish
as you can see the image is being pushed
all right the publish is a success and
now if you go into Docker Hub we'll be
able to see the image that we have
pushed now I'm going back to Azure
portal now we have this to do front-end
content wrap already and it is the hello
world application that we have published
when we created the service now I don't
want this service anymore because I'm
going to publish my to-do front end my
actual to do front end I'm going to
delete this container app now as you can
see here we can delete we can interrupts
environment as well with this to do
front end I'm not going to do that now
what I'm going to do is I'm just going
to delete to Define content all right as
you can see here we have deleted the
container app to do front end going back
again and then I'm gonna search for
container apps I'm going to create this
service for this name I'm going to go
with to do front end and the same apps
environment I'm going to go next I'm not
going to use the quick start image this
time I'm going to nail this to do front
end the image source it's not going to
be Azure container registry it's going
to be Docker Hub and the image type is
public and now let's add the image name
here all right I don't have any Commando
rides and the CPU and memory I'm going
to go with the smallest version here and
then I'm going to enable HTTP Ingress
for this application and accepting
traffic from anywhere and the port is 80
now right now I'm going to create this
container app our deployment is now
complete now I'm going into the resource
and we have the application URI I'm
going to click on it all right as you
can see here we have hosted our own
application on Azure content wraps also
awesome right now in this video we have
created this to do front end and we have
hosted our own application as you can
see in my next video I'm going to show
you how to create the backend for this
application and in that video I'm going
to show you how these containers can
interact with each other if you have any
questions or comments please let me know
down below or suggestions as well please
let me know and don't forget to like
this video And subscribe if you learned
something new today I will see you with
another video like this thanks for
watching